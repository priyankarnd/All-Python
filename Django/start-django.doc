1. Environment creation
virtualenv .
source bin/activate
pip install django

2. Create a blank Django project
mkdir src 
cd src 
django-admin startproject trydjango .
python manage.py runserver

3. Sync all the settings
python manage.py makemigrations
python manage.py migrate

4. Create superuser
python manage.py createsuperuser
Go to server webpage now to check: http://127.0.0.1:8000/admin/

5. Create apps
python manage.py startapp appname

6. Create models in app_folder/models.py

7. In trydjango/settings.py, in INSTALLED_APPS, register your app

8. Import your app in app_folder/admin.py

9. Go to server by webpage and see product option which can be edited

10. Creating products from Python shell

(trydjango) bappa@Little-Master:~/trydjango/src$  python manage.py shell
>>> from products.models import Product
>>> Product.objects.create(title= 'New product 2',description = 'another one', price = '19312', summary='sweet')
<Product: Product object (2)>
>>> Product.objects.create(title= 'New product 2',description = 'another one', price = '19312', summary='sweet')
<Product: Product object (3)>
>>> Product.objects.create(title= 'New product 2',description = 'another one', price = '19312', summary='sweet')
<Product: Product object (4)>
>>> Product.objects.create(title= 'New product 2',description = 'another one', price = '19312', summary='sweet')
<Product: Product object (5)>
>>> Product.objects.all()
<QuerySet [<Product: Product object (1)>, <Product: Product object (2)>, <Product: Product object (3)>, <Product: Product object (4)>, <Product: Product object (5)>]>

11. Creating custom homepage
In trydjango → urls.py, import views from appname. Add path in url patterns.

12. Using Django templates
Add templates folder and add .html pages
Add templates path in TEMPLATES → DIRS in settings.py 
Use render in views.py

13. For more templates features, see the templates documentation


Exit from virtual environment: deactivate
